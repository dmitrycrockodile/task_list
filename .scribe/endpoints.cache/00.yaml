## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the user tasks filtered by "is_completed" status.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": [
                 {
                     "id": 1,
                     "name": "Task Name",
                     "description": "Task Description",
                     "is_completed": false,
                     "user_id": 1
                 },
                 {
                     "id": 2,
                     "name": "Another Task",
                     "description": "Another Task Description",
                     "is_completed": true,
                     "user_id": 2
                 }
             ],
             "success": true,
             "message": "Tasks retrieved successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "data": "Full error message",
             "success": false,
             "message": "Failed to retrieve tasks."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer evZ8a14h6b5D3cg6VkfdPaE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created task in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the task.'
        required: true
        example: '"Buy groceries"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: true
        example: '"Buy milk, eggs, and bread"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Buy groceries"'
      description: '"Buy milk, eggs, and bread"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "data": {
                 "id": 1,
                 "name": "Buy groceries",
                 "description": "Buy milk, eggs, and bread",
                 "is_completed": false,
                 "user_id": 1
             },
             "success": true,
             "message": "Task created successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "success": false,
             "message": "Validation error: The 'name' field is required."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to create the task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v5bhg3acaed16Z8PkVD6Ef4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified task in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the task.'
        required: false
        example: '"Buy groceries"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: '"Buy milk, eggs, and bread"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_completed:
        name: is_completed
        description: 'The completion status of the task.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Buy groceries"'
      description: '"Buy milk, eggs, and bread"'
      is_completed: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 1,
                 "name": "Buy groceries",
                 "description": "Buy milk, eggs, and bread",
                 "is_completed": true,
                 "user_id": 1
             },
             "success": true,
             "message": "Task updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "success": false,
             "message": "Validation error: The 'name' field is required."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Task not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to update the task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VdPf86bg14ZvhDaaE6ek5c3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{task_id}/complete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified task''s "is_completed" status to true in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 1,
                 "name": "Buy groceries",
                 "description": "Buy milk, eggs, and bread",
                 "is_completed": true,
                 "user_id": 1
             },
             "success": true,
             "message": "Task marked as complete."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Task not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to update the task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hd6PDk43fc815aega6bVZEv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{task_id}/incomplete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified task''s "is_completed" status to false in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 1,
                 "name": "Buy groceries",
                 "description": "Buy milk, eggs, and bread",
                 "is_completed": false,
                 "user_id": 1
             },
             "success": true,
             "message": "Task marked as incomplete."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Task not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to update the task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6aDVZf314P68Ehbca5egkd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "message": "Task deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Task not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to delete the task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V8akc65h4dbDavPfe1Zg6E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register the user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: '"John Doe"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: '"john@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the user.'
        required: true
        example: '"secretpassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"John Doe"'
      email: '"john@example.com"'
      password: '"secretpassword"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "data": "john@example.com",
             "success": true,
             "message": "User registered successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "success": false,
             "message": "Validation failed."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "success": false,
             "message": "Failed to register the user."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
